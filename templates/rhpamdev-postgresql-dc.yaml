kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  labels:
    app: {{ .ApplicationName }}
  name: {{ .PostgresqlDeployment }}
  namespace: {{ .ApplicationNamespace }}
spec:
  strategy:
    type: Recreate
    recreateParams:
      post:
        execNewPod:
          command: 
          - /bin/bash
          - /tmp/init-files/wait_for_postgresql.sh
          - /tmp/init-files/create_rhpam_database.sh
          containerName: {{ .PostgresqlDeployment }}
          volumes:
          - init-volume
        failurePolicy: Abort
      timeoutSeconds: 600
    resources: {}
  triggers:
  - type: ConfigChange
  replicas: 1
  selector:
    name: {{ .PostgresqlDeployment }}
  template:
    metadata:
      labels:
        name: {{ .PostgresqlDeployment }}
        app: {{ .ApplicationName }}
      name: {{ .PostgresqlDeployment }}
    spec:
      serviceAccountName: "{{ .ServiceAccount }}"
      containers:
      - name: {{ .PostgresqlDeployment }}
        image: {{ .PostgresqlImage }}
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
          initialDelaySeconds: 5
          timeoutSeconds: 1
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .PostgresqlSecret }}
              key: database-user
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .PostgresqlSecret }}
              key: database-password
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ .PostgresqlSecret }}
              key: database-name
        - name: POSTGRESQL_SERVICE
          value: {{ .PostgresqlService }}
        - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
          value: "{{ .PostgresqlMaxPreparedTransactions }}"
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "{{ .PostgresqlMaxConnections }}"
        - name: POSTGRESQL_SHARED_BUFFERS
          value: "{{ .PostgresqlSharedBuffers }}"
        resources:
          limits:
            memory: {{ .PostgresqlMemoryLimit }}
        volumeMounts:
        - name: "{{ .PostgresqlPvc }}"
          mountPath: "/var/lib/pgsql/data"
        - name: init-volume
          mountPath: /tmp/init-files
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
        capabilities: {}
        securityContext:
          capabilities: {}
          privileged: false
      volumes:
      - name: "{{ .PostgresqlPvc }}"
        persistentVolumeClaim:
          claimName: "{{ .PostgresqlPvc }}"
      - configMap:
          defaultMode: 493
          name: "{{ .PostgresqlInitConfigmap }}"
        name: init-volume
      restartPolicy: Always
      dnsPolicy: ClusterFirst